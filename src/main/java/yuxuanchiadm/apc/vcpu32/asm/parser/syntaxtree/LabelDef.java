/* Generated by JTB 1.4.7 */
package yuxuanchiadm.apc.vcpu32.asm.parser.syntaxtree;

import yuxuanchiadm.apc.vcpu32.asm.parser.visitor.*;

/**
 * JTB node class for the production LabelDef:<br>
 * Corresponding grammar:<br>
 * nodeToken -> <LabelBegin><br>
 * nodeToken1 -> <Label><br>
 */
@SuppressWarnings("all")
public class LabelDef implements INode {

  /** Child node 1 */
  public NodeToken nodeToken;

  /** Child node 2 */
  public NodeToken nodeToken1;

  /** The serial version UID */
  private static final long serialVersionUID = 147L;

  /**
   * Constructs the node with all its children nodes.
   *
   * @param n0 - first child node
   * @param n1 - next child node
   */
  public LabelDef(final NodeToken n0, final NodeToken n1) {
    nodeToken = n0;
    nodeToken1 = n1;
  }

  /**
   * Accepts the IRetArguVisitor visitor.
   *
   * @param <R> the user return type
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   * @return a user chosen return information
   */
  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  /**
   * Accepts the IRetVisitor visitor.
   *
   * @param <R> the user return type
   * @param vis - the visitor
   * @return a user chosen return information
   */
  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  /**
   * Accepts the IVoidArguVisitor visitor.
   *
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   */
  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  /**
   * Accepts the IVoidVisitor visitor.
   *
   * @param vis - the visitor
   */
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
